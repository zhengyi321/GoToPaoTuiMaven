<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhyan.gotopaotui.dao.LocMapMapper" >
  <resultMap id="BaseResultMap" type="com.zhyan.gotopaotui.bean.LocMap" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="guid" property="guid" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="DOUBLE" />
    <result column="lon" property="lon" jdbcType="DOUBLE" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, guid, pid, lat, lon, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.zhyan.gotopaotui.bean.LocMapKey" >
    select 
    <include refid="Base_Column_List" />
    from locmap
    where id = #{id,jdbcType=INTEGER}
      and guid = #{guid,jdbcType=VARCHAR}
  </select>
  <select id="selectByPid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from locmap
    where pid = #{pid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zhyan.gotopaotui.bean.LocMapKey" >
    delete from locmap
    where id = #{id,jdbcType=INTEGER}
      and guid = #{guid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zhyan.gotopaotui.bean.LocMap" >
    insert into locmap (id, guid, pid, 
      lat, lon, createTime, 
      updateTime)
    values (#{id,jdbcType=INTEGER}, #{guid,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{lat,jdbcType=DOUBLE}, #{lon,jdbcType=DOUBLE}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zhyan.gotopaotui.bean.LocMap" >
    insert into locmap
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="guid != null" >
        guid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="lon != null" >
        lon,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="guid != null" >
        #{guid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null" >
        #{lon,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhyan.gotopaotui.bean.LocMap" >
    update locmap
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null" >
        lon = #{lon,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and guid = #{guid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhyan.gotopaotui.bean.LocMap" >
    update locmap
    set pid = #{pid,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=DOUBLE},
      lon = #{lon,jdbcType=DOUBLE},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and guid = #{guid,jdbcType=VARCHAR}
  </update>
</mapper>